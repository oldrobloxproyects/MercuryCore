// This is the Prisma schema file, determining the structure of the Postgres database
// and how it can be accessed by Prisma.

// Learn more about it in the docs: https://pris.ly/d/prisma-schema
// Sections are commented out, not yet implemented

generator client {
    provider        = "prisma-client-js"
    previewFeatures = ["fullTextSearch"]
}

datasource db {
    provider = "postgresql"
    url      = env("POSTGRES_URL")
}

// Miscellaneous

enum Visibility {
    Visible
    Deleted
    Moderated
}

// Users & Groups
// ADMIN LEVELS:
// 1: User
// 2: Verified
// 3: Catalog Manager
// 4: Moderator
// 5: Administrator

model AuthUser {
    id       String    @id @unique @default(uuid())
    auth_key AuthKey[]

    number               Int           @unique @default(autoincrement())
    username             String        @unique
    email                String        @unique
    permissionLevel      Int           @default(1)
    created              DateTime      @default(now())
    lastOnline           DateTime      @default(now())
    currencyCollected    DateTime      @default(now())
    status               String?
    currency             Int           @default(0)

    bodyColours Json @default("{\"Head\": 24, \"Torso\": 23, \"LeftArm\": 24, \"RightArm\": 24, \"LeftLeg\": 119, \"RightLeg\": 119}")
    // {"Head": 24, "Torso": 23, "LeftArm": 24, "RightArm": 24, "LeftLeg": 119, "RightLeg": 119}

    theme             String?
    animationSettings String?

    @@map("user")
}

// Authentication key for a user
model AuthKey {
    id              String   @id @unique
    hashed_password String?
    user_id         String
    auth_user       AuthUser @relation(references: [id], fields: [user_id], onDelete: Cascade)

    @@index([user_id])
    @@map("key")
}
